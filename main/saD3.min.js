/**
 *  @fileOverview saD3 is a javascript library extending the d3
 * functionality of common graphs matching the conventions perscribed
 * by Sangwa Solutions
 *
 *  @author       Jamie Sgro
 *
 *  @requires     {@link https://d3js.org/d3.v5.min.js d3.v5}
 *
 *  @license
 *     Copyright 2019 Sangwa / Sangwa Libraries
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License
 */
class Base_D3{constructor(t,a,e,i){this.margin=e,this.width=t-this.margin.left-this.margin.right,this.height=a-this.margin.top-this.margin.bottom,this.colourBottom=i.bottom,this.colourTop=i.top,this.max=0,this.min=0,this.widthScale=function(){},this.heightScale=function(){},this.colour_D3=new Colour_D3,this.getColour=this.colour_D3.getColour,this._getAttr_fill=this.colour_D3._getAttr_fill,this._getAttr_fillTransparent=this.colour_D3._getAttr_fillTransparent,this.getSvgSize=function(t,a){t.attr("width",a.width+a.margin.left+a.margin.right).attr("height",a.height+a.margin.top+a.margin.bottom)},this.svg=d3.select("body").append("svg").attr("class","graph svg").call(this.getSvgSize,this),this.canvas=this.svg.append("g").attr("transform","translate("+this.margin.left+","+this.margin.top+")")}getDomain(t){return[d3.min(t),d3.max(t)]}prePlot(){}_getAttr_x(t,a){t.attr("x",function(t){return a._x(t,a)})}_getAttr_y(t,a){t.attr("y",function(t){return a._y(t,a)})}_getAttr_width(t,a){t.attr("width",a._width(t,a))}_getAttr_height(t,a){t.attr("height",function(t){return a._height(t,a)})}getAttr(t,a,e){for(var i in e)a["_getAttr_"+e[i]](t,a)}getXAxis(t,a){t.attr("transform","translate(0,"+a.height+")").call(d3.axisBottom(a.getWidthScale(a.domain)))}getYAxis(t,a,e){t.call(d3.axisLeft(a.getHeightScale(e)))}plot(t){var a=this.prePlot(t);this.canvas.selectAll("rect.bar").data(a).enter().append("rect").attr("class","bar").attr("height",0).attr("y",this.height).call(this.getAttr,this,["x","width","fill"]),this.canvas.append("g").attr("class","x axis").call(this.getXAxis,this),this.canvas.append("g").attr("class","y axis").call(this.getYAxis,this,a),this.postPlot(a)}update(t,a){var e=new Motion_D3;this.canvas.selectAll("rect.bar").data(t).each(function(t){d3.select(this).call(e.attrTween,800,"height",a._height(t,a)),d3.select(this).call(e.attrTween,800,"y",a._y(t,a))})}}class Motion_D3{constructor(){}attrTween(t,a,e,i){d3.select({}).transition().duration(a).tween(e,function(){var a=d3.interpolate(t.attr(e),i);return function(i){t.attr(e,a(i))}})}}class Colour_D3{constructor(){}getColour(t){var a=this.yLabel;return d3.scaleLinear().domain([0,d3.max(t,function(t){return t[a]})]).range([this.colourBottom,this.colourTop])}_getAttr_fill(t,a){var e=a.getColour(t.data());t.attr("fill",function(t){return e(t[a.yLabel])})}_getAttr_fillTransparent(t,a){var e=a.getColour(t.data());t.attr("fill",function(t){return rtn=e(t[a.yLabel]),setAlpha(rtn,0)})}}class _Int{constructor(){}getWidthScale(t){return d3.scaleLinear().domain([0,t[1]]).rangeRound([0,this.width]).nice()}parseRawData_one(t,a){return a.map(function(a,e){return parseFloat(a[t.yLabel])})}parseRawData_two(t,a){return a.map(function(a,e){return{[t.xLabel]:parseFloat(a[t.xLabel]),[t.yLabel]:parseFloat(a[t.yLabel])}})}}class _Date{constructor(){this.parseTime=d3.timeParse("%Y-%m-%d")}getWidthScale(t){return d3.scaleTime().domain(t).rangeRound([0,this.width]).nice()}parseRawData_one(t,a){return a.map(function(a,e){return t._date.parseTime(a[t.yLabel])})}parseRawData_two(t,a){return a.map(function(a,e){return{[t.xLabel]:t._date.parseTime(a[t.xLabel]),[t.yLabel]:a[t.yLabel]}})}}class Histogram extends Base_D3{constructor(t,a,e,i,r,s="value"){super(t,a,e,i),this.binNum=r,this.yLabel=s}getHeightScale(t){return d3.scaleLinear().domain([0,d3.max(t,function(t){return t.length})]).range([this.height,0])}getWidthScale(){}getBins(t,a){return d3.histogram().domain(t.widthScale.domain()).thresholds(t.widthScale.ticks(t.binNum))(a)}_x(t,a){return a.widthScale(t.x0)}_y(t,a){return a.heightScale(t[a.yLabel])}_width(t,a){var e=t.data();return a.widthScale(e[0].x1)-a.widthScale(e[0].x0)-1}_height(t,a){return a.height-a.heightScale(t[a.yLabel])}parseRawData(t){}prePlot(t){var a=this.parseRawData(this,t);this.domain=this.getDomain(a),this.widthScale=this.getWidthScale(this.domain);var e=this.getBins(this,a);return this.heightScale=this.getHeightScale(e),this.yLabel="length",e}postPlot(t){this.canvas.selectAll("rect.bar").attr("transform","translate(1,0)"),this.update(t,this)}}class Histogram_Int extends Histogram{constructor(t,a,e,i,r,s){super(t,a,e,i,r,s),this._int=new _Int,this.getWidthScale=this._int.getWidthScale,this.parseRawData=this._int.parseRawData_one}}class Histogram_Date extends Histogram{constructor(t,a,e,i,r,s){super(t,a,e,i,r,s),this._date=new _Date,this.getWidthScale=this._date.getWidthScale,this.parseRawData=this._date.parseRawData_one}}class Bargraph extends Base_D3{constructor(t,a,e,i,r="value",s="start_date"){super(t,a,e,i),this.xLabel=s,this.yLabel=r}getHeightScale(t){var a=this.yLabel;return d3.scaleLinear().domain([0,d3.max(t,function(t){return t[a]})]).range([this.height,0])}getWidthScale(){}_x(t,a){return a.widthScale(t[a.xLabel])}_y(t,a){return a.heightScale(t[a.yLabel])}_width(t,a){var e=t.data().map(function(t){return t[a.xLabel]}),i=d3.extent(e),r=d3.timeDay.count(i[0],i[1])+1;return a.width/r}_height(t,a){return a.height-a.heightScale(t[a.yLabel])}prePlot(t){var a=this.parseRawData(this,t),e=this.xLabel,i=a.map(function(t){return t[e]});return this.domain=this.getDomain(i),this.domain[1]=d3.timeDay.offset(this.domain[1],1),this.widthScale=this.getWidthScale(this.domain),this.heightScale=this.getHeightScale(a),a}postPlot(t){this.update(t,this)}}class Bargraph_Date extends Bargraph{constructor(t,a,e,i,r,s){super(t,a,e,i,r,s),this._date=new _Date,this.getWidthScale=this._date.getWidthScale,this.parseRawData=this._date.parseRawData_two}}
